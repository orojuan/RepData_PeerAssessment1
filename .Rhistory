y<-0.5*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
y<-0.5*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
set.seed(10)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(10,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(1000,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(1000,0,20)
hist(y)
y<-0.5+2*rbinom(1000,10,0.5)+rnorm(1000,0,20)
hist(y)
?read.xlsx
library(xlsx)
?read.xlsx
mydf <- read.xlsx("C:/Users/orojuan/Documents/GLA/FY14/Acc Selection/Finance GM Data 2014-04-30.xlsx",sheetIndex=2,rowIndex=1:51,colIndex=1:9,header=T,colClasses=c(rep("character",2),rep("numeric",7)))
sum(mydf$BCS)
colSums(mydf[,-1:2])
colSums(mydf[,3:9])
head(mydf)
?melt
final <- melt(mydf[,-2],id="Ctry_group")
library(reshape)
library("reshape")
library(Reshape)
install.packages("Reshape")
y
install.packages("reshape")
library(reshape)
final <- melt(mydf[,-2],id="Ctry_group")
head(final)
nrow(final)
names(final)[[2]][2]<-"BU"
names(final)[[2]]<-c("Ctry_group","BU","GM")
names(final)[[2]]
dim(final)
class(final)
write.table("C:/Users/orojuan/Documents/GLA/FY14/Acc Selection/gm.txt",final)
?write.table
write.table(final,"C:/Users/orojuan/Documents/GLA/FY14/Acc Selection/gm.txt")
write.table(final,"C:/Users/orojuan/Documents/GLA/FY14/Acc Selection/gm.csv",sep=",")
write.table(final,"C:/Users/orojuan/Documents/GLA/FY14/Acc Selection/gm.csv",sep=",",row.names=F)
jn <- rad.table("C:/Users/orojuan/Desktop/hist.txt",header=F,colClasses="numeric")
jn <- read.table("C:/Users/orojuan/Desktop/hist.txt",header=F,colClasses="numeric")
hist(jn)
class(jn)
str(jn)
hist(jn$V1)
hist(jn$V1,breaks=19)
hist(jn$V1,breaks=19)
hist(jn$V1)
hist(LN(jn$V1))
hist(ln(jn$V1))
?log
hist(log(jn$V1))
hist(jn$V1)
summary(jn$V1)
library(lattice)
histogram(jn$V1)
?histogram
histogram(jn$V1,breaks=19)
histogram(jn$V1)
?histogram
histogram(jn$V1)
histogram(jn$V1,breaks=447)
histogram(log(jn$V1),breaks=447)
histogram(jn$V1,breaks=447)
histogram(jn$V1,breaks=400)
histogram(jn$V1,breaks=200)
histogram(jn$V1,breaks=100)
length(jn$V1)
sqrt(length(jn$V1))
histogram(jn$V1,breaks=458)
histogram(log(jn$V1),breaks=458)
sum(is.na(jn$V1))
library(ggplo2)
install.packages("ggplot2")
library(ggplot2)
qplot(jn$V1)
?qplot
qplot(jn$V1,breaks=200)
qplot(jn$V1)
?qplot
histogram(log(jn$V1),breaks=458)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis.par.set
?print.trellis
?splom
?par
?trellis.par.set
xyplot(weight ~ Time | Diet, BodyWeight)
text("main=Scatterplot by Diet")
text(main="Scatterplot by Diet")
?llines
xyplot(weight ~ Time | Diet, BodyWeight)
llines(h=300)
llines(x=c(0,60),y=c(300,300))
?llines
xyplot(weight ~ Time | Diet, BodyWeight)
panel.lines(x=c(0,60),y=c(300,300))
?text
?axis
library(datasets)
data(airquality)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "lm")
?qplot
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, geom=c("points","loess"))
?qplot
qplot(votes, rating, data = movies, geom=c("point","loess"))
qplot(votes, rating, data = movies, geom=c("point","lm"))
qplot(votes, rating, data = movies, geom=c("point","smooth"))
qplot(votes, rating, data = movies, geom=c("point","smooth"),method="loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
?geom.smooth
?geom_smooth
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
setwd("C:/Users/orojuan/Documents/Data Science/Reproducible/RepData_PeerAssessment1")
?unzip
unzip(",/activity.zip")
unzip("./activity.zip")
mydf <- read.csv(".activity.csv",colClasses=c("numeric","character","factor"),comment.char="")
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","factor"),comment.char="")
had(mydf)
head(mydf)
is.na(mydf[1,1])
summary(mydf$interval)
table(mydf$interval)
class(mydf$interval)
?as.factor
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","ordered"),comment.char="")
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
mydf[,3] <- as.factor(mydf[,3],ordered=T)
mydf[,3] <- factor(mydf[,3],ordered=T)
table(mydf[,3])
class(mydf[,3])
levels(mydf[,3])
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
?seq
mydf[,3] <- factor(mydf[,3],levels=seq(from=1,to=2355,by=5),ordered=T)
table(mydf[,3])
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
mydf[,3] <- factor(mydf[,3],levels=seq(from=0,to=2355,by=5),ordered=T)
table(mydf[,3])
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
mydf[,3] <- factor(mydf[,3],ordered=T)
table(mydf[,3])
?factor
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
mydf[,3] <- as.ordered(mydf[,3])
table(mydf[,3])
str(mydf[,3])
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
mydf[,3]
mydf[,3] <- factor(mydf[,3],ordered=T)
str(mydf[,3])
?format
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","character"),comment.char="")
format(mydf[,3],width=4)
format(mydf[,3],nsmall=4)
mydf[,3]
format(mydf[,3],nsmall=4)
?factor
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","numeric"),comment.char="")
mydf[,3] <- factor(mydf[,3],ordered=T)
str(mydf[,3])
table(mydf[,3])
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","ordered"),comment.char="")
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","numeric"),comment.char="")
mydf[,3] <- factor(mydf[,3],ordered=T)
?as.Date
?strptime
mydf[,2] <- as.Date(mydf[,2])
head(mydf)
head(mydf.20)
head(mydf,20)
with(mydf,tapply(steps,date,sum))
with(mydf,tapply(steps,date,sum,na.rm=T))
class(with(mydf,tapply(steps,date,sum,na.rm=T)))
hist(with(mydf,tapply(steps,date,sum,na.rm=T)))
log2(61)+1
hist(with(mydf,tapply(steps,date,sum,na.rm=T)),breaks=7)
library(ggplot2)
qplot(with(mydf,tapply(steps,date,sum,na.rm=T)))
qplot(with(mydf,tapply(steps,date,sum,na.rm=T)),breaks=7)
library(lattice)
histogram(with(mydf,tapply(steps,date,sum,na.rm=T)),breaks=7)
histogram(with(mydf,tapply(steps,date,sum,na.rm=T)))
?histogram
histogram(with(mydf,tapply(steps,date,sum,na.rm=T)),xlab="Daily steps")
histogram(daily,xlab="Daily steps")
daily <- with(mydf,tapply(steps,date,sum,na.rm=T))
histogram(daily,xlab="Daily steps")
mean(daily)
median(daily)
with(mydf,tapply(steps,interval,mean,na.rm=T))
?xyplot
xyplot(interval,avginter)
xyplot(mydf$interval,avginter)
plot(mydf$interval,avginter)
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
class(avginter)
plot(mydf$interval,avginter)
length(avginter)
length(mydf$interval)
length(levels(mydf$interval))
levels(mydf$interval)
plot(levels(mydf$interval),avginter)
avginter
plot(levels(mydf$interval),avginter)
plot(levels(mydf$interval),avginter,type="l")
?which.max
which.max(avginter)
max(avginter)
which.max(avginter)
names(avginter[which.max(avginter)])
plot(levels(mydf$interval),avginter,type="l")
sum(is.na(mydf$steps))
avginter["835"]
with(mydf,steps[is.na(steps)] <- avginter[interval[is.na(steps)]]])
with(mydf,steps[is.na(steps)] <- avginter[interval[is.na(steps)]])
avginter["0"]
head(mydf)
mydf$steps[is.na(mydf$steps)] <- avginter[mydf$interval[is.na(mydf$steps)]])
mydf$steps[is.na(mydf$steps)] <- avginter[mydf$interval[is.na(mydf$steps)]]
head(mydf)
avginter["5"]
avginter["10"]
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","numeric"),comment.char="")
mydf[,3] <- factor(mydf[,3],ordered=T)
mydf[,2] <- as.Date(mydf[,2])
daily <- with(mydf,tapply(steps,date,sum,na.rm=T))
histogram(daily,xlab="Daily steps")
mean(daily)
median(daily)
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
plot(levels(mydf$interval),avginter,type="l")
names(avginter[which.max(avginter)])
sum(is.na(mydf$steps))
mydf2 <- mydf
mydf2$steps[is.na(mydf$steps)] <- avginter[mydf$interval[is.na(mydf$steps)]]
head(mydf)
head(mydf2)
daily <- with(mydf2,tapply(steps,date,sum,na.rm=T))
daily <- with(mydf,tapply(steps,date,sum,na.rm=T))
daily2 <- with(mydf2,tapply(steps,date,sum,na.rm=T))
histogram(daily2,xlab="Daily steps")
mean(daily2)
median(daily2)
median(daily)
?weekdays
sys.Time
sys.Time()
time.Sys()
time.sys()
sys.time()
sys.Time()
Sys.time
Sys.time()
weekdays(Sys.time())
weekdays(Sys.date())
weekdays(Sys.Date())
unclass(weekdays(Sys.Date()))
weekdays(Sys.Date())
library(lubridate)
wday(Sys.Date())
wday(Sys.Date()+1)
wday(Sys.Date()+6)
wday(Sys.Date()+7)
mydf2$wday <- ifelse(wday(mydf2$date)<6,"Weekday","Weekend")
head(mydf2,20)
head(mydf2[mydf$wday="Weekend",],20)
mydf2[mydf$wday="Weekend",]
head(mydf2[mydf$wday=="Weekend",],20)
mydf2[mydf$wday=="Weekend",]
mydf2
wday(Sys.Date())
?mod
7%%7
1%%7
mydf2$wday <- ifelse(wday(mydf2$date)%%7<2,"Weekend","Weekday")
mydf2
plot(levels(mydf$interval),avginter,type="l")
xyplot(levels(mydf$interval),avginter,type="l")
xyplot(levels(mydf$interval),avginter)
plot(levels(mydf$interval),avginter,type="l")
xyplot(levels(mydf$interval),avginter)
xyplot(as.numeric(levels(mydf$interval)),avginter)
dev.off()
plot(levels(mydf$interval),avginter,type="l")
class(levels(mydf$interval))
class(as.numeric(levels(mydf$interval)))
class(avginter)
class(as.vector(avginter))
as.vector(avginter)
xyplot(as.numeric(levels(mydf$interval)),as.vector(avginter),type="l")
?subset
subset(mydf2,wday="Weekend")
subset(mydf2,wday="Weekend")
nrow(subset(mydf2,wday="Weekend"))
nrow(subset(mydf2,subset=wday="Weekend"))
nrow(subset(mydf2,subset=wday=="Weekend"))
subset(mydf2,subset=wday=="Weekend")
avgwrk <- with(subset(mydf2,subset=wday=="Weekday"),tapply(steps,interval,mean,na.rm=T))
avgleis <- with(subset(mydf2,subset=wday=="Weekend"),tapply(steps,interval,mean,na.rm=T))
avgwrk
avgleis
par(mfrow=c(2,1))
plot(levels(mydf2$interval),avgwrk,type="l")
plot(levels(mydf2$interval),avgleis,type="l")
library(ggplot2)
library(lattice)
library(lubridate)
setwd("C:/Users/orojuan/Documents/Data Science/Reproducible/RepData_PeerAssessment1")
if(!file.exists("./activity.csv")){
unzip("./activity.zip")
}
mydf <- read.csv("./activity.csv",colClasses=c("numeric","character","numeric"),comment.char="")
mydf[,3] <- factor(mydf[,3],ordered=T)
mydf[,2] <- as.Date(mydf[,2])
daily <- with(mydf,tapply(steps,date,sum,na.rm=T))
class(daily)
dim(daily)
histogram(daily,xlab="Daily steps")
mean(daily)
median(daily)
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
plot(levels(mydf$interval),avginter,type="l")
xyplot(levels(mydf$interval),avginter,type="l")
xyplot(as.numeric(levels(mydf$interval)),avginter,type="l")
as.numeric(levels(mydf$interval))
avginter
as.numeric(avginter)
as.vector(avginter)
?tapply
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
avginter
avginter<-as.vector(avginter)
avginter
names(avginter)
avginter<-as.vector(unlist(avginter))
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
avginter<-as.vector(unlist(avginter))
avginter
xyplot(avginter~levels(mydf$interval),type="l")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l")
plot(levels(mydf$interval),avginter,type="l")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l")
histogram(daily,xlab="Daily steps")
hist(daily,xlab="Daily steps")
histogram(daily,xlab="Daily steps")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l",xlab="Interval ID",ylab="average steps")
sum(is.na(mydf$steps))
mydf2 <- mydf
mydf2$steps[is.na(mydf$steps)] <- avginter[mydf$interval[is.na(mydf$steps)]]
daily2 <- with(mydf2,tapply(steps,date,sum,na.rm=T))
histogram(daily2,xlab="Daily steps")
mean(daily2)
median(daily2)
mydf2$wday <- ifelse(wday(mydf2$date)%%7<2,"Weekend","Weekday")
avgwrk <- with(subset(mydf2,subset=wday=="Weekday"),tapply(steps,interval,mean,na.rm=T))
avgleis <- with(subset(mydf2,subset=wday=="Weekend"),tapply(steps,interval,mean,na.rm=T))
par(mfrow=c(2,1))
plot(levels(mydf2$interval),avgwrk,type="l")
plot(levels(mydf2$interval),avgleis,type="l")
dev.off()
xyplot(mydf$steps~as.numeric(levels(mydf$interval))|mydf$wday)
xyplot(mydf$steps~as.numeric(levels(mydf$interval))|as.factor(mydf$wday))
class(mydf$wday)
xyplot(mydf2$steps~as.numeric(levels(mydf2$interval))|as.factor(mydf2$wday))
?xyplot
?panel.lmline
?panel
xyplot?
?xyplot
xyplot(mydf2$steps~as.numeric(levels(mydf2$interval))|as.factor(mydf2$wday),panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(lm(y~x + z))
})
xyplot(mydf2$steps~as.numeric(levels(mydf2$interval))|as.factor(mydf2$wday),panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(lm(y~x + g1))
})
xyplot(mydf2$steps~as.numeric(levels(mydf2$interval))|as.factor(mydf2$wday),panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(lm(mydf2$steps~mydf2$interval + mydf2$wday))
})
lm(mydf2$steps~mydf2$interval + mydf2$wday)
interaction(mydf2$wday,mydf2$interval)
jn <- with(mydf,tapply(steps,interaction(wday,interval),mean,na.rm=T))
jn <- with(mydf,tapply(steps,interaction(wday,as.vector(interval)),mean,na.rm=T))
jn <- with(mydf,tapply(steps,list(wday,interval),mean,na.rm=T))
jn <- with(mydf,tapply(steps,list(as.vector(wday),as.vector(interval)),mean,na.rm=T))
?tapply
jn <- with(mydf2,tapply(steps,interaction(wday,interval),mean,na.rm=T))
jn
jn <- with(mydf2,tapply(steps,interaction(interval,wday),mean,na.rm=T))
jn
class(jn)
names(jn)
sn<-names(jn)[1:10]
sn
parse(sn,sep=".")
strsplot(sn,sep=".")
strsplit(sn,sep=".")
?strplit
?strsplit
strsplit(sn,".",T)
?gsub
grep("[0-9]+\.",sn)
grep("[0-9]+.\",sn)
grep("Weekday",sn)
grep("[0-9]+",sn)
grep("[0-9]+",sn,value=T)
?match
sn
unlist(strsplit(sn))
unlist(strsplit(sn,".",T))
sapply(strsplit(sn,".",T),x[[1]])
sapply(strsplit(sn,".",T),function(x) x[[1]])
?with
unlist(strsplit(sn,".",T))
sn <- unlist(strsplit(sn,".",T))
sn[sn%%2==1]
index(sn)
indices(sn)
sn[seq(1:length(names(jn)))%%2==1]
sn[seq(1:10)%%2==1]
sn[seq(1:10)%%2==0]
sn<- unlist(strsplit(names(jn),".",T))
?seq
xyplot(sn[seq(length(jn))%%2==1]~jn|sn[seq(length(jn))%%2==0])
xyplot(jn~sn[seq(length(jn))%%2==1]|sn[seq(length(jn))%%2==0])
jn
sn[seq(length(jn))%%2==1]
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0])
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l")
mydf2 <- mydf
mydf2$steps[is.na(mydf$steps)] <- avginter[mydf$interval[is.na(mydf$steps)]]
daily2 <- with(mydf2,tapply(steps,date,sum,na.rm=T))
histogram(daily2,xlab="Daily steps")
mean(daily2)
median(daily2)
## Are there differences in activity patterns between weekdays and weekends?
mydf2$wday <- ifelse(wday(mydf2$date)%%7<2,"Weekend","Weekday")
avgwrk <- with(subset(mydf2,subset=wday=="Weekday"),tapply(steps,interval,mean,na.rm=T))
avgleis <- with(subset(mydf2,subset=wday=="Weekend"),tapply(steps,interval,mean,na.rm=T))
par(mfrow=c(2,1))
plot(levels(mydf2$interval),avgwrk,type="l")
plot(levels(mydf2$interval),avgleis,type="l")
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l")
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l",xlab="Interval ID",ylab="Average steps")
par(mfrow=c(2,1))
plot(levels(mydf2$interval),avgwrk,type="l")
plot(levels(mydf2$interval),avgleis,type="l")
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l",xlab="Interval ID",ylab="Average steps")
?interaction
plot(levels(mydf$interval),avginter,type="l")
par(mfrow=c(1,1))
dev.off()
plot(levels(mydf$interval),avginter,type="l")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l",xlab="Interval ID",ylab="Average steps")
which.max(avginter)
avginter[which.max(avginter)]
names(avginter[which.max(avginter)])
names(avginter[which.max(avginter)])
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
names(avginter[which.max(avginter)])
names(which.max(avginter))
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l",xlab="Interval ID",ylab="Average steps")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l",xlab="Interval ID",ylab="Average steps")
avginter <- with(mydf,tapply(steps,interval,mean,na.rm=T))
lentgh(avginter)
length(avginter)
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l",xlab="Interval ID",ylab="Average steps")
length(as.numeric(levels(mydf$interval)))
xyplot(avginter~levels(mydf$interval),type="l",xlab="Interval ID",ylab="Average steps")
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l",xlab="Interval ID",ylab="Average steps")
avginer
avginter
names(avginter)
xyplot(avginter~as.numeric(levels(mydf$interval)),type="l",xlab="Interval ID",ylab="Average steps")
xyplot(avginter~names(avginter),type="l",xlab="Interval ID",ylab="Average steps")
xyplot(avginter~as.numeric(names(avginter)),type="l",xlab="Interval ID",ylab="Average steps")
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l",xlab="Interval ID",ylab="Average steps")
xyplot(jn~sn[seq(length(jn))%%2==1]|sn[seq(length(jn))%%2==0],type="l",xlab="Interval ID",ylab="Average steps")
xyplot(jn~as.numeric(sn[seq(length(jn))%%2==1])|sn[seq(length(jn))%%2==0],type="l",xlab="Interval ID",ylab="Average steps")
nrow(mydf2)
sum(complete.cases(mydf2))
